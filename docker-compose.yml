version: '3.8'

services:
  frontend:
    build: ./frontend
    ports:
      - "5173:80"
    # No necesitamos un volumen aquí en producción, la imagen ya tiene el código
    # volumes:
    #   - ./frontend:/app
    depends_on:
      - backend

  backend:
    build: ./backend
    ports:
      - "8000:8000"
    # No necesitamos un volumen aquí tampoco
    # volumes:
    #   - ./backend:/app
    env_file:
      - ./.env
    # MODIFICACIÓN CLAVE: Espera a que el servicio 'db' esté 'service_healthy'
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env
    ports:
      - "5432:5432"
    # MODIFICACIÓN CLAVE: Añadimos un chequeo de salud
    healthcheck:
      # Esta es la orden que Docker ejecutará para ver si la DB está sana
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s   # Comprueba cada 5 segundos
      timeout: 5s    # Espera un máximo de 5 segundos por respuesta
      retries: 5     # Inténtalo 5 veces antes de marcarlo como no saludable

volumes:
  postgres_data:
